#include <stdio.h>
#include <mpi.h>
#include <string.h>

void reverse(char *s) {
    int len = strlen(s);
    for (int i = 0; i < len / 2; i++) {
        char tmp = s[i];
        s[i] = s[len - i - 1];
        s[len - i - 1] = tmp;
    }
}

void toggle(char *s) {
    int len = strlen(s);
    for (int i = 0; i < len; i++) {
        if (s[i] >= 'a' && s[i] <= 'z') {
            s[i] = s[i] - 'a' + 'A';
        } else if (s[i] >= 'A' && s[i] <= 'Z') {
            s[i] = s[i] - 'A' + 'a';
        }
    }
}

int main(int argc, char** argv) {
    int rank, size;
    char str[256];
    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    if (rank == 0) {
        printf("Enter 3 strings:\n");
        for (int i = 0; i < 3; i++) {
            scanf("%s", str);
            MPI_Send(str, strlen(str)+1, MPI_CHAR, i+1, 0, MPI_COMM_WORLD);
        }
    } else {
        MPI_Recv(str, 256, MPI_CHAR, 0, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
        reverse(str);
        toggle(str);
        MPI_Send(str, strlen(str)+1, MPI_CHAR, 0, 0, MPI_COMM_WORLD);
    }
    if (rank == 0) {
        printf("The results are:\n");
        for (int i = 0; i < 3; i++) {
            MPI_Recv(str, 256, MPI_CHAR, i+1, 0, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
            printf("%s\n", str);
        }
    }
    MPI_Finalize();
    return 0;
}
