
#include <stdio.h>
#include <stdlib.h>
#include <mpi.h>

int factorial(int n) {
    if (n == 0) {
        return 1;
    } else {
        return n * factorial(n-1);
    }
}

int main(int argc, char** argv) {
    int n, rank, size, i, num;
    int *data, *results;
    int local_result;

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    if (rank == 0) {
        printf("Enter the number of values: ");
        scanf("%d", &n);

        data = (int*)malloc(n * sizeof(int));
        results = (int*)malloc(n * sizeof(int));

        for (i = 0; i < n; i++) {
            printf("Enter value %d: ", i+1);
            scanf("%d", &data[i]);
        }
    }

    MPI_Bcast(&n, 1, MPI_INT, 0, MPI_COMM_WORLD);

    num = n/size;

    if (n % size != 0) {
        num++;
    }

    int *local_data = (int*)malloc(num * sizeof(int));
    MPI_Scatter(data, num, MPI_INT, local_data, num, MPI_INT, 0, MPI_COMM_WORLD);

    for (i = 0; i < num; i++) {
        local_result = factorial(local_data[i]);
        MPI_Reduce(&local_result, &results[i], 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);
    }

    if (rank == 0) {
        int sum = 0;
        for (i = 0; i < n; i++) {
            sum += results[i];
        }
        printf("The sum of the factorials is: %d\n", sum);
    }

    MPI_Finalize();

    return 0;
}